{"version":3,"sources":["modules/Auth/actions.js","modules/Auth/Auth.js","modules/Auth/api.js","localStorage.js","modules/Auth/sagas.js","modules/Profile/actions.js","modules/Profile/Profile.js","modules/Profile/sagas.js","modules/Map/actions.js","modules/Map/Map.js","modules/Map/api.js","modules/Map/sagas.js","modules/index.js","store.js","components/Header/Header.js","components/Login/Login.js","components/Map/MapForm.js","components/Map/Map.js","components/Map/routeUtils.js","components/Profile/PaymentForm.js","components/Profile/Profile.js","components/PrivateRoute/PrivateRoute.js","components/App/App.js","index.js"],"names":["handleLoginSubmit","createAction","handleLoginSubmitSuccess","handleUnAuthorize","loggedIn","handleActions","_handleActions","Object","defineProperty","getIsLoggedIn","state","getUserInfo","username","password","fetch","concat","then","response","json","updateState","data","updateData","stringData","window","localStorage","getItem","objectSpread","JSON","parse","setItem","stringify","fetchLoginInWatcher","fetchLoginFlow","authorize","fetchLogoutInWatcher","fetchLogoutFlow","regenerator_default","a","wrap","_context","prev","next","takeLatest","stop","_marked","_ref","_context2","select","getFormValues","sent","call","t0","SubmissionError","message","_marked2","res","_context3","success","put","startSubmit","stopSubmit","error","_marked3","_context4","_marked4","_context5","_marked5","_callee","_context6","fork","_marked6","handleProfileSubmit","profile","action","payload","getProfile","fetchProfileInWatcher","fetchProfileFlow","sagas_marked","sagas_marked2","sagas_callee","sagas_marked3","fetchAddressListRequest","fetchAddressListSuccess","fetchAddressListFailure","handleRouteSubmit","handleRouteSubmitSuccess","handleClearSubmit","addresses","Map_handleActions","route","_handleActions2","getIsAddresses","_ref2","Array","isArray","length","getIsRoute","_ref3","getAddressList","catch","console","log","getRoute","from","to","fetchAddressListWatcher","fetchAddressListFlow","fetchRouteWatcher","fetchRouteFlow","Map_sagas_marked","Map_sagas_marked2","Map_sagas_marked3","sagas_marked4","Map_sagas_callee","sagas_marked5","rootSaga","combineReducers","form","formReducer","loginFormSagas","payloadFormSagas","mapFormSagas","modules_marked","createAppStore","sagaMiddleware","createSagaMiddleware","persistedState","e","loadState","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","run","mapDispatchToProps","withRouter","connect","isLoggedIn","withStyles","theme","root","position","zIndex","grow","flexGrow","button","margin","spacing","props","classes","react_default","createElement","className","AppBar","color","Toolbar","Typography","variant","Button","component","Link","onClick","renderTextField","input","label","_ref$meta","meta","touched","custom","invalid","objectWithoutProperties","TextField","assign","helperText","reduxForm","validate","values","errors","paper","marginTop","marginBottom","padding","breakpoints","up","handleSubmit","react_router","Grid","container","direction","alignItems","justify","style","minHeight","item","xs","onSubmit","Paper","elevation","align","name","type","map","key","Field","fullWidth","required","renderSelectField","selectName","children","FormControl","InputLabel","htmlFor","Select","native","inputProps","isAddresses","top","left","maxWidth","display","flexWrap","pristine","submitting","useEffect","Paper_default","Grid_default","alignContent","Typography_default","value","el","Button_default","disabled","isRoute","_ref4","mapContainer","useRef","Div","styled","div","_templateObject","innerHeight","mapboxgl","accessToken","current","Map","center","zoom","remove","on","coordinates","flyTo","addLayer","id","source","properties","geometry","layout","line-join","line-cap","paint","line-color","line-width","drawRoute","ref","gutterBottom","Map_MapForm","normalizeCardNumber","replace","match","join","initialValues","_values","cardNumber","cvv","forEach","field","test","marginLeft","submitSucceeded","md","normalize","InputLabelProps","shrink","Profile_PaymentForm","Component","rest","render","App","react_router_dom","components_Header_Header","components_PrivateRoute_PrivateRoute","path","Profile","Login","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a6d5f272.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const handleLoginSubmit = createAction('HANDLE_LOGIN_SUBMIT');\nexport const handleLoginSubmitSuccess = createAction(\n  'HANDLE_LOGIN_SUBMIT_SUCCESS'\n);\nexport const handleUnAuthorize = createAction('HANDLE_UNAUTHORIZE');\n","import { handleActions } from 'redux-actions';\nimport {\n  handleLoginSubmit,\n  handleLoginSubmitSuccess,\n  handleUnAuthorize\n} from './actions';\n\nconst loggedIn = handleActions(\n  {\n    [handleLoginSubmit]: () => false,\n    [handleLoginSubmitSuccess]: () => true,\n    [handleUnAuthorize]: () => false\n  },\n  false\n);\n\nexport default loggedIn;\nexport const getIsLoggedIn = state => state.loggedIn;\n","export const getUserInfo = (username, password) =>\n  fetch(\n    `https://loft-taxi-remix.glitch.me/auth?username=${username}&password=${password}`\n  ).then(response => response.json());\n","const loadState = () => {\n  try {\n    const stringData = window.localStorage.getItem('state');\n    if (stringData === null) {\n      return undefined;\n    }\n    return JSON.parse(stringData);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst updateState = data => {\n  const stringData = window.localStorage.getItem('state');\n  let updateData;\n  if (stringData === null) {\n    updateData = data;\n  } else {\n    updateData = { ...JSON.parse(stringData), ...data };\n  }\n  // Обновляем данные\n  window.localStorage.setItem('state', JSON.stringify(updateData));\n};\n\nexport { loadState, updateState };\n","import { takeLatest, select, put, call, fork } from 'redux-saga/effects';\nimport {\n  handleLoginSubmit,\n  handleLoginSubmitSuccess,\n  handleUnAuthorize\n} from './actions';\nimport { getUserInfo } from './api';\nimport { updateState } from '../../localStorage';\n\nimport {\n  startSubmit,\n  stopSubmit,\n  SubmissionError,\n  getFormValues\n} from 'redux-form';\n\nfunction* fetchLoginInWatcher() {\n  yield takeLatest(handleLoginSubmit, fetchLoginFlow);\n}\n\nexport function* fetchLoginFlow() {\n  try {\n    const { username, password } = yield select(getFormValues('loginForm'));\n    yield call(authorize, username, password);\n  } catch (e) {\n    throw new SubmissionError(e.message);\n  }\n}\n\nfunction* authorize(username, password) {\n  const res = yield call(getUserInfo, username, password);\n  if (res.success) {\n    yield put(startSubmit('loginForm'));\n    yield put(handleLoginSubmitSuccess());\n    yield call(updateState, { loggedIn: true });\n  } else {\n    yield put(stopSubmit('loginForm', res.error));\n  }\n}\n\nfunction* fetchLogoutInWatcher() {\n  yield takeLatest(handleUnAuthorize, fetchLogoutFlow);\n}\n\nexport function* fetchLogoutFlow() {\n  yield call(updateState, { loggedIn: false });\n}\n\nexport default function*() {\n  yield fork(fetchLoginInWatcher);\n  yield fork(fetchLogoutInWatcher);\n}\n","import { createAction } from 'redux-actions';\n\nexport const handleProfileSubmit = createAction('HANDLE_PROFILE_SUBMIT');\n","import { handleActions } from 'redux-actions';\nimport { handleProfileSubmit } from './actions';\n\nconst profile = handleActions(\n  {\n    [handleProfileSubmit]: (state, action) => action.payload\n  },\n  null\n);\n\nexport default profile;\nexport const getProfile = state => state.profile;\n","import { takeLatest, select, call, fork } from 'redux-saga/effects';\nimport { handleProfileSubmit } from './actions';\nimport { updateState } from '../../localStorage';\nimport { getFormValues } from 'redux-form';\n\nfunction* fetchProfileInWatcher() {\n  yield takeLatest(handleProfileSubmit, fetchProfileFlow);\n}\n\nexport function* fetchProfileFlow() {\n  const profile = yield select(getFormValues('paymentForm'));\n  yield call(updateState, { profile });\n}\n\nexport default function*() {\n  yield fork(fetchProfileInWatcher);\n}\n","import { createAction } from 'redux-actions';\n\nexport const fetchAddressListRequest = createAction(\n  'FETCH_ADDRESS_LIST_REQUEST'\n);\n\nexport const fetchAddressListSuccess = createAction(\n  'FETCH_ADDRESS_LIST_SUCCESS'\n);\nexport const fetchAddressListFailure = createAction(\n  'FETCH_ADDRESS_LIST_FAILURE'\n);\n\nexport const handleRouteSubmit = createAction('HANDLE_ROUTE_SUBMIT');\nexport const handleRouteSubmitSuccess = createAction(\n  'HANDLE_ROUTE_SUBMIT_SUCCESS'\n);\n\nexport const handleClearSubmit = createAction('HANDLE_CLEAR_SUBMIT');\n","import { handleActions } from 'redux-actions';\nimport {\n  fetchAddressListRequest,\n  fetchAddressListSuccess,\n  fetchAddressListFailure,\n  handleRouteSubmit,\n  handleClearSubmit,\n  handleRouteSubmitSuccess\n} from './actions';\n\nconst addresses = handleActions(\n  {\n    [fetchAddressListRequest]: state => state,\n    [fetchAddressListSuccess]: (state, action) => action.payload,\n    [fetchAddressListFailure]: (state, action) => action.payload\n  },\n  []\n);\n\nexport const route = handleActions(\n  {\n    [handleRouteSubmit]: () => [],\n    [handleClearSubmit]: () => [],\n    [handleRouteSubmitSuccess]: (state, action) => action.payload\n  },\n  []\n);\n\nexport default addresses;\n\nexport const getAddresses = ({ addresses }) => addresses;\nexport const getIsAddresses = ({ addresses }) =>\n  Array.isArray(addresses) && addresses.length > 0;\n\nexport const getIsRoute = ({ route }) =>\n  Array.isArray(route) && route.length > 0;\nexport const getRoute = ({ route }) => route;\n","export const getAddressList = () =>\n  fetch(`https://loft-taxi-remix.glitch.me/addressList`)\n    .then(response => response.json())\n    .catch(error => console.log(error));\n\nexport const getRoute = (from, to) =>\n  fetch(\n    `https://loft-taxi-remix.glitch.me/route?address1=${from}&address2=${to}`\n  )\n    .then(response => response.json())\n    .catch(error => console.log(error));\n","import { takeLatest, put, select, call, fork } from 'redux-saga/effects';\nimport {\n  getFormValues,\n  startSubmit,\n  stopSubmit,\n  SubmissionError\n} from 'redux-form';\nimport {\n  fetchAddressListRequest,\n  fetchAddressListSuccess,\n  fetchAddressListFailure,\n  handleRouteSubmit,\n  handleRouteSubmitSuccess\n} from './actions';\nimport { getAddressList, getRoute } from './api';\nimport { getIsAddresses } from './Map';\n\nfunction* fetchAddressListWatcher() {\n  yield takeLatest(fetchAddressListRequest, fetchAddressListFlow);\n}\n\nexport function* fetchAddressListFlow() {\n  try {\n    const isAddress = yield select(getIsAddresses);\n\n    if (!isAddress) {\n      const { addresses } = yield call(getAddressList);\n      yield put(fetchAddressListSuccess(addresses));\n    }\n  } catch (error) {\n    yield put(fetchAddressListFailure({ error }));\n  }\n}\n\nfunction* fetchRouteWatcher() {\n  yield takeLatest(handleRouteSubmit, fetchRouteFlow);\n}\n\nexport function* fetchRouteFlow() {\n  try {\n    const { from, to } = yield select(getFormValues('mapForm'));\n    const res = yield call(getRoute, from, to);\n    yield put(handleRouteSubmitSuccess(res));\n    yield put(startSubmit('mapForm'));\n  } catch (e) {\n    yield put(stopSubmit('mapForm', e.message));\n    throw new SubmissionError(e.message);\n  }\n}\n\nexport default function*() {\n  yield fork(fetchAddressListWatcher);\n  yield fork(fetchRouteWatcher);\n}\n","import { combineReducers } from 'redux';\nimport { fork } from 'redux-saga/effects';\nimport { reducer as formReducer } from 'redux-form';\nimport loggedIn, { sagas as loginFormSagas } from './Auth';\nimport profile, { sagas as payloadFormSagas } from './Profile';\nimport addresses, { route, sagas as mapFormSagas } from './Map';\n\nexport default combineReducers({\n  loggedIn,\n  profile,\n  addresses,\n  route,\n  form: formReducer\n});\n\nexport function* rootSaga() {\n  yield fork(loginFormSagas);\n  yield fork(payloadFormSagas);\n  yield fork(mapFormSagas);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport { loadState } from './localStorage';\n\nconst createAppStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const persistedState = loadState();\n\n  const store = createStore(\n    rootReducer,\n    persistedState,\n    compose(\n      applyMiddleware(sagaMiddleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : f => f\n    )\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default createAppStore;\n","import React from 'react';\nimport { compose } from 'redux';\nimport connect from 'react-redux/es/connect/connect';\nimport { Link, withRouter } from 'react-router-dom';\nimport { getIsLoggedIn, handleUnAuthorize } from '../../modules/Auth';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  root: { position: 'relative', zIndex: 100 },\n\n  grow: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst Header = props => {\n  const { handleUnAuthorize, isLoggedIn, classes } = props;\n\n  const handleClick = () => {\n    handleUnAuthorize();\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\">\n        <Toolbar>\n          <Typography className={classes.grow} variant=\"h6\" color=\"inherit\">\n            Loft Taxi\n          </Typography>\n          <Button component={Link} to=\"/map\">\n            Карта\n          </Button>\n          <Button component={Link} to=\"/profile\">\n            Профиль\n          </Button>\n          {isLoggedIn ? (\n            <Button onClick={handleClick}>Выйти</Button>\n          ) : (\n            <Button component={Link} to=\"/login\">\n              Войти\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({ isLoggedIn: getIsLoggedIn(state) });\nconst mapDispatchToProps = { handleUnAuthorize };\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withStyles(styles)\n)(Header);\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { getIsLoggedIn, handleLoginSubmit } from '../../modules/Auth';\nimport { withRouter } from 'react-router-dom';\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(6))]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  }\n});\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = 'Неверный логин';\n  }\n\n  if (!values.password) {\n    errors.password = 'Неправильный пароль';\n  }\n\n  return errors;\n};\n\nconst renderTextField = ({\n  input,\n  label,\n  meta: { touched, error, invalid },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    error={touched && error}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst LoginForm = props => {\n  const { handleSubmit, handleLoginSubmit, isLoggedIn, classes } = props;\n\n  const onSubmit = () => {\n    handleLoginSubmit();\n  };\n\n  return isLoggedIn ? (\n    <Redirect to=\"/map\" />\n  ) : (\n    <Grid\n      container\n      className={classes.root}\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: '100vh' }}\n    >\n      <Grid item xs={3}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Paper className={classes.paper} elevation={2}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Typography component=\"h2\" variant=\"h4\" align=\"center\">\n                  Войти\n                </Typography>\n              </Grid>\n              {[\n                { name: 'username', label: 'Имя пользователя', type: 'text' },\n                { name: 'password', label: 'Пароль', type: 'password' }\n              ].map(({ name, label, type }) => (\n                <Grid key={name} item xs={12}>\n                  <Field\n                    name={name}\n                    label={label}\n                    margin=\"none\"\n                    component={renderTextField}\n                    type={type}\n                    fullWidth\n                    required\n                  />\n                </Grid>\n              ))}\n              <Grid item xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  className={classes.button}\n                  type=\"submit\"\n                >\n                  Войти\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </form>\n      </Grid>\n    </Grid>\n  );\n};\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({ isLoggedIn: getIsLoggedIn(state) });\nconst mapDispatchToProps = { handleLoginSubmit };\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  reduxForm({\n    form: 'loginForm',\n    validate\n  }),\n  withStyles(styles)\n)(LoginForm);\n","import React, { useEffect } from 'react';\nimport { compose } from 'redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button/Button';\nimport connect from 'react-redux/es/connect/connect';\nimport { Field, reduxForm } from 'redux-form';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {\n  fetchAddressListRequest,\n  handleRouteSubmit,\n  getAddresses,\n  getIsAddresses\n} from '../../modules/Map';\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    top: 0,\n    left: 20,\n    maxWidth: '30%',\n    zIndex: 1,\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(6))]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n\n  grow: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst renderSelectField = ({\n  input,\n  label,\n  selectName,\n  meta: { touched, error },\n  children,\n  ...custom\n}) => (\n  <FormControl error={touched && error}>\n    <InputLabel htmlFor={selectName}>{label}</InputLabel>\n    <Select\n      native\n      {...input}\n      {...custom}\n      inputProps={{\n        name: selectName\n      }}\n    >\n      {children}\n    </Select>\n  </FormControl>\n);\n\nconst MapForm = ({\n  fetchAddressListRequest,\n  handleSubmit,\n  handleRouteSubmit,\n  isAddresses,\n  addresses,\n  classes,\n  invalid,\n  submitting,\n  pristine\n}) => {\n  useEffect(() => {\n    fetchAddressListRequest();\n  }, [fetchAddressListRequest]);\n\n  const onSubmit = () => {\n    handleRouteSubmit();\n  };\n\n  return (\n    <Paper className={classes.paper} elevation={2}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid\n          container\n          className={classes.root}\n          spacing={4}\n          alignContent=\"stretch\"\n          alignItems=\"stretch\"\n          direction=\"row\"\n          justify=\"flex-start\"\n          component=\"div\"\n        >\n          <Grid item xs={12}>\n            <Typography\n              className={classes.grow}\n              variant=\"h4\"\n              component=\"h1\"\n              align=\"left\"\n            >\n              Вызов такси\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {[\n              { label: 'Выберите адрес отправления', name: 'from' },\n              { label: 'Выберите адрес прибытия', name: 'to' }\n            ].map(({ label, name }) => (\n              <Field\n                key={label}\n                label={label}\n                selectName={name}\n                name={name}\n                component={renderSelectField}\n              >\n                <option value=\" \" />\n                {isAddresses &&\n                  addresses.map(el => (\n                    <option key={el} value={el}>\n                      {el}\n                    </option>\n                  ))}\n              </Field>\n            ))}\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              disabled={invalid || pristine}\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.button}\n              type=\"submit\"\n            >\n              Вызывать такси\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </Paper>\n  );\n};\n\nconst mapStateToProps = state => ({\n  addresses: getAddresses(state),\n  isAddresses: getIsAddresses(state)\n});\nconst mapDispatchToProps = { fetchAddressListRequest, handleRouteSubmit };\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  reduxForm({\n    form: 'mapForm'\n  }),\n  withStyles(styles)\n)(MapForm);\n","import React, { useEffect, useRef } from 'react';\nimport { compose } from 'redux';\nimport connect from 'react-redux/es/connect/connect';\nimport { Link, withRouter } from 'react-router-dom';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport styled from 'styled-components';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Button from '@material-ui/core/Button/Button';\nimport { getIsLoggedIn } from '../../modules/Auth';\nimport { getIsRoute, getRoute, handleClearSubmit } from '../../modules/Map';\nimport MapForm from './MapForm';\nimport { drawRoute } from './routeUtils';\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    top: 0,\n    left: 20,\n    maxWidth: '30%',\n    zIndex: 1,\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(6))]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n\n  grow: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst Map = props => {\n  const { isLoggedIn, isRoute, handleClearSubmit, route, classes } = props;\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n\n  const Div = styled.div`\n    position: relative;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: ${window.innerHeight - 64}px;\n  `;\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      'pk.eyJ1IjoidG9ib2Noa2EiLCJhIjoiY2p2azJoNDQ4MGtxOTN5cW1yNmxmc3BleSJ9.mNLvfhUFoh2eIU7-e-C4cA';\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [30.2656504, 59.8029126],\n      zoom: 15\n    });\n\n    return () => {\n      map.current.remove();\n    };\n  });\n\n  useEffect(() => {\n    map.current.on('style.load', () => {\n      if (isRoute) {\n        drawRoute(map.current, route);\n      }\n    });\n  });\n\n  const handleClick = () => {\n    handleClearSubmit();\n  };\n\n  return (\n    <Div ref={mapContainer}>\n      {isLoggedIn ? (\n        !isRoute ? (\n          <MapForm />\n        ) : (\n          <Paper className={classes.paper}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"left\">\n                  Заказ размещён\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography\n                  className={classes.grow}\n                  variant=\"body2\"\n                  gutterBottom\n                >\n                  Ваше такси уже едет к вам. Прибудет приблизительно через 10\n                  минут.\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={handleClick}\n                >\n                  Сделать новый заказ\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        )\n      ) : (\n        <Paper className={classes.paper} elevation={2}>\n          <Grid\n            container\n            className={classes.root}\n            spacing={4}\n            alignContent=\"stretch\"\n            alignItems=\"stretch\"\n            direction=\"row\"\n            justify=\"flex-start\"\n            component=\"div\"\n          >\n            <Grid item xs={12}>\n              <Typography\n                className={classes.grow}\n                variant=\"h4\"\n                component=\"h1\"\n                color=\"inherit\"\n              >\n                Заполните платежные данные\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography className={classes.grow} variant=\"body2\" gutterBottom>\n                Укажите информацию о банковской карте, чтобы сделать заказ.\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                component={Link}\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.button}\n                to=\"/profile\"\n              >\n                Перейти в профиль\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n    </Div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsLoggedIn(state),\n  isRoute: getIsRoute(state),\n  route: getRoute(state)\n});\n\nconst mapDispatchToProps = { handleClearSubmit };\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withStyles(styles)\n)(Map);\n","export const drawRoute = (map, coordinates) => {\n  map.flyTo({\n    center: coordinates[0],\n    zoom: 15\n  });\n\n  map.addLayer({\n    id: 'route',\n    type: 'line',\n    source: {\n      type: 'geojson',\n      data: {\n        type: 'Feature',\n        properties: {},\n        geometry: {\n          type: 'LineString',\n          coordinates\n        }\n      }\n    },\n    layout: {\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    paint: {\n      'line-color': '#c2423a',\n      'line-width': 8\n    }\n  });\n};\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { getProfile, handleProfileSubmit } from '../../modules/Profile';\n\nconst styles = theme => ({\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n});\n\nconst normalizeCardNumber = value =>\n  value\n    ? value\n        .replace(/\\s/g, '')\n        .match(/.{1,4}/g)\n        .join(' ')\n    : '';\n\nconst validate = values => {\n  const { cardNumber, cvv } = { ...values };\n  const errors = {};\n\n  const requiredFields = ['cardName', 'cardNumber', 'expData', 'cvv'];\n\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Это обязательное поле';\n    }\n  });\n\n  if (cardNumber && cardNumber.replace(/\\s/g, '').length !== 16) {\n    errors.cardNumber = 'В номере карты 16 цифр';\n  }\n\n  if (cardNumber && !/^\\d+$/.test(cardNumber.replace(/\\s/g, ''))) {\n    errors.cardNumber = 'Может содержать только цифры';\n  }\n\n  if (cvv && cvv.length !== 3) {\n    errors.cvv = 'CVV состоит из 3 цифр';\n  }\n\n  if (cvv && !/^\\d+$/.test(cvv)) {\n    errors.cvv = 'Может содержать только цифры';\n  }\n\n  return errors;\n};\n\nconst renderTextField = ({\n  input,\n  label,\n  meta: { touched, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    error={!!(touched && error)}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n);\n\nconst PaymentForm = props => {\n  const { handleSubmit, handleProfileSubmit, submitSucceeded, classes } = props;\n\n  const onSubmit = values => {\n    handleProfileSubmit(values);\n  };\n\n  return submitSucceeded ? (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography className={classes.grow} variant=\"body2\" gutterBottom>\n          Платёжные данные обновлены. Теперь вы можете заказывать такси.\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/map\">\n          Перейти на карту\n        </Button>\n      </Grid>\n    </Grid>\n  ) : (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Typography className={classes.grow} variant=\"h6\">\n        Cпособ оплаты\n      </Typography>\n      <Grid\n        container\n        className={classes.root}\n        spacing={3}\n        alignContent=\"stretch\"\n        alignItems=\"stretch\"\n        component=\"div\"\n        direction=\"row\"\n        justify=\"flex-start\"\n      >\n        <Grid item xs={12} md={6}>\n          <Field\n            name=\"cardName\"\n            label=\"Имя владельца\"\n            component={renderTextField}\n            fullWidth\n            required\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Field\n            name=\"cardNumber\"\n            label=\"Номер карты\"\n            component={renderTextField}\n            normalize={normalizeCardNumber}\n            fullWidth\n            required\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Field\n            name=\"expData\"\n            label=\"Дата окончания действия\"\n            type=\"date\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            component={renderTextField}\n            fullWidth\n            required\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Field\n            name=\"cvv\"\n            label=\"CVV\"\n            component={renderTextField}\n            fullWidth\n            required\n          />\n        </Grid>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          className={classes.button}\n        >\n          Сохранить\n        </Button>\n      </Grid>\n    </form>\n  );\n};\n\nPaymentForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  initialValues: getProfile(state)\n});\nconst mapDispatchToProps = { handleProfileSubmit };\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  reduxForm({\n    form: 'paymentForm',\n    validate\n  }),\n  withStyles(styles)\n)(PaymentForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport PaymentForm from './PaymentForm';\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(6))]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  container: {\n    minHeight: '100vh'\n  }\n});\n\nconst Profile = props => {\n  const { classes } = props;\n\n  return (\n    <Grid container spacing={0} direction=\"column\" alignItems=\"center\">\n      <Grid item xs={10}>\n        <Paper className={classes.paper} elevation={2}>\n          <Typography variant=\"h4\" component=\"h1\" align=\"center\">\n            Профиль\n          </Typography>\n          <PaymentForm />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Profile);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsLoggedIn } from '../../modules/Auth';\n\nconst PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\n  const renderRoute = props =>\n    isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />;\n\n  return <Route {...rest} render={renderRoute} />;\n};\n\nexport default connect(state => ({\n  isLoggedIn: getIsLoggedIn(state)\n}))(PrivateRoute);\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Header from '../Header';\nimport Login from '../Login';\nimport Map from '../Map';\nimport Profile from '../Profile';\nimport PrivateRoute from '../PrivateRoute';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <PrivateRoute path=\"/map\" component={Map} />\n        <PrivateRoute path=\"/profile\" component={Profile} />\n        <Route path=\"/login\" component={Login} />\n        <Redirect to=\"/map\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport createStore from './store';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\n\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}